)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1, cex=0.5
)
dev.off()
plot(power$DateTime, power$Sub_metering_1,
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 200, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1, cex=0.5
)
png(file = "plot3.png", width = 480, height = 480, units = "px")
plot(power$DateTime, power$Sub_metering_1,
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1, cex=0.5
)
dev.off()
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n"
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1, cex=0.5
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1, cex=0.5
)
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1, cex=0.5
)
png(file = "plot3.png", width = 480, height = 480, units = "px")
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1, cex=0.5
)
dev.off()
View(power)
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
ylim = c(0,40)
col = "red"
)
lines(power$DateTime, power$Sub_metering_2,
ylim = c(0,40),
col = "red"
)
View(power)
power$Sub_metering_1 <-  as.numeric(
as.character(power$Sub_metering_1)
)
power$Sub_metering_2 <-  as.numeric(
as.character(power$Sub_metering_2)
)
power$Sub_metering_3 <-  as.numeric(
as.character(power$Sub_metering_3)
)
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1, cex=0.5
)
png(file = "plot3.png", width = 480, height = 480, units = "px")
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1, cex=0.5
)
dev.off()
png(file = "plot3.png", width = 480, height = 480, units = "px")
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1
)
dev.off()
power$Global_active_power <-  as.numeric(
as.character(power$Global_active_power)
)
power$Sub_metering_1 <-  as.numeric(
as.character(power$Sub_metering_1)
)
power$Sub_metering_2 <-  as.numeric(
as.character(power$Sub_metering_2)
)
power$Sub_metering_3 <-  as.numeric(
as.character(power$Sub_metering_3)
)
power$Voltage <-  as.numeric(
as.character(power$Voltage)
)
power$Global_reactive_power <-  as.numeric(
as.character(power$Global_reactive_power)
)
png(file = "plot4.png", width = 480, height = 480, units = "px")
plot(power$DateTime, power$Global_active_power,
ylab = "Global Active Power (kilowatts)",
xlab = "",
type = "l"
)
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1
)
dev.off()
png(file = "plot4.png", width = 480, height = 480, units = "px")
par(mfrow=c(1,1))
plot(power$DateTime, power$Global_active_power,
ylab = "Global Active Power (kilowatts)",
xlab = "",
type = "l"
)
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1
)
dev.off()
png(file = "plot4.png", width = 480, height = 480, units = "px")
par(mfrow=c(1,2))
plot(power$DateTime, power$Global_active_power,
ylab = "Global Active Power (kilowatts)",
xlab = "",
type = "l"
)
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1
)
dev.off()
par(mfrow=c(2,2))
plot(power$DateTime, power$Global_active_power,
ylab = "Global Active Power (kilowatts)",
xlab = "",
type = "l"
)
plot(power$DateTime, power$Voltage,
ylab = "Voltage",
xlab = "datetime",
type = "l"
)
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1
)
plot(power$DateTime, power$Global_reactive_power,
ylab = "Global_reactive_power",
xlab = "datetime",
type = "l"
)
png(file = "plot4.png", width = 480, height = 480, units = "px")
par(mfrow=c(2,2))
plot(power$DateTime, power$Global_active_power,
ylab = "Global Active Power (kilowatts)",
xlab = "",
type = "l"
)
plot(power$DateTime, power$Voltage,
ylab = "Voltage",
xlab = "datetime",
type = "l"
)
plot(power$DateTime, power$Sub_metering_1,
yaxt = "n",
ylab = "Energy sub meeting",
xlab = "",
type = "l"
)
axis(2, at = seq(10, 40, by = 10), las=2)
lines(power$DateTime, power$Sub_metering_2,
col = "red"
)
lines(power$DateTime, power$Sub_metering_3,
col = "blue"
)
legend("topright",
legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col    = c("black", "red", "blue"),
lty=1
)
plot(power$DateTime, power$Global_reactive_power,
ylab = "Global_reactive_power",
xlab = "datetime",
type = "l"
)
dev.off()
source('D:/Plotting2/plot4.R')
png(file = "plot2.png", width = 480, height = 480, units = "px")
plot(power$DateTime, power$Global_active_power,
ylab = "Global Active Power (kilowatts)",
xlab = "",
type = "l"
)
dev.off()
file.name <- "./household_power_consumption.txt"
url       <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zip.file  <- "./data.zip"
download.file(url, destfile = power.zip)
unzip(power.zip)
file.name <- "./household_power_consumption.txt"
url       <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zip.file  <- "./powerzip"
download.file(url, destfile = powerzip)
unzip(power.zip)
file.name <- "./household_power_consumption.txt"
url       <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zip.file  <- "./power.zip"
download.file(url, destfile = power.zip)
unzip(power.zip)
download.file(url)
download.file(url, destfile = zip.file)
unzip(power.zip)
unzip(power)
unzip(power.zip)
unzip("power.zip")
file.name <- "household_power_consumption.txt"
url       <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zip.file  <- "power.zip"
download.file(url, destfile = "power.zip")
unzip("power.zip")
url       <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zip.file  <- "power.zip"
download.file(url, destfile = "power.zip")
unzip("power.zip")
setwd("D:/MotorFuelApps/MMF")
shiny::runApp()
install.packages("ggtheme")
library(ggthemes)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
MF33SF16 <- read.csv("data/MF33SF16.csv", header = TRUE)
MF33SF17 <- read.csv("data/MF33SF17.csv", header = TRUE)
#NA's were coded as 0s in this table and are changed to reflect that the
#information isn't available
MF33SF17[MF33SF17 == 0] <- NA
MF33SF17 <- read.csv("data/MF33SF17.csv", header = TRUE)
View(MF33SF17)
MF33SF17 <- read.csv("data/MF33SF17.csv", header = TRUE)
MF33SF17 <- MF33SF17[,colSums(is.na(MF33SF17))<nrow(MF33SF17)]
View(MF33SF17)
View(CAGA1216)
raw551 <- read.csv("data/MF551_RAW.csv", header = TRUE)
View(raw551)
raw551 <- subset(raw551, DESCRIPTION == "Gross Volume")
View(raw551)
raw551[order(raw551$Date),]
View(raw551)
View(raw551)
runApp()
View(raw551)
runApp()
runApp()
runApp()
runApp()
View(raw551)
ggsdc(raw551, aes(x=Date, y=GASOLINE_VOLUME),
method = "stl", s.window = "periodic", frequency = 12,
facet.titles = c("The original series", "The underlying trend",
"Regular seasonal patterns", "Remainder")) +
geom_line(size = 1.1, color = "#2060A8") +
theme_fivethirtyeight()
runApp()
runApp()
runApp()
runApp()
View(raw551)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggsdc(raw551, aes(x=Date, y=GASOLINE_VOLUME),
method = "stl", s.window = "periodic", frequency = 12,
facet.titles = c("The original series", "The underlying trend",
"Regular seasonal patterns", "Remainder")) +
geom_line(size = 1.1, color = "#2060A8") +
theme_fivethirtyeight()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(raw551)
subset(raw551, STATE_NAME == "Alabama")
data2 <- subset(raw551, STATE_NAME == "Alabama")
ggsdc(data2, aes(x = Date, y = GASOLINE_VOLUME),
method = "stl", s.window = "periodic", frequency = 12,
facet.titles = c("The original series", "The underlying trend",
"Regular seasonal patterns", "Remainder")) +
geom_line(size = 1.1, color = "#2060A8") +
theme_fivethirtyeight()
ggsdc(data2, aes(x = Date, y = GASOLINE_VOLUME,
method = "stl", s.window = "periodic", frequency = 12,
facet.titles = c("The original series", "The underlying trend",
"Regular seasonal patterns", "Remainder"))) +
geom_line(size = 1.1, color = "#2060A8") +
theme_fivethirtyeight()
View(raw551)
runApp()
View(raw551)
runApp()
View(raw551)
runApp()
raw551$gas <- raw551$GASOHOL_VOLUME + raw551$GASOLINE_VOLUME
View(raw551)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
